#!/usr/bin/env python2.7
# -*- coding: utf-8 -*-

if __name__ == "__main__":
    import os, sys, argparse, layer_importer, psycopg2 as dbapi2
    try:
        from StringIO import StringIO
    except ImportError:
        from io import StringIO, BytesIO

    ArgP = argparse.ArgumentParser(description="Imports one layer directory as output by axl_translator.")
    ArgP.add_argument("--api_url", default="http://localhost:8080/geoserver")
    ArgP.add_argument("--api_user", default="admin")
    ArgP.add_argument("--api_password", default="geoserver")
    ArgP.add_argument("--db_host", default="localhost")
    ArgP.add_argument("--db_port", default=5432)
    ArgP.add_argument("--db_user")
    ArgP.add_argument("--db_name")
    ArgP.add_argument("--db_password", default="")
    ArgP.add_argument("workspace", help="The GeoServer workspace name.")
    ArgP.add_argument("datastore", help="The GeoServer datastore name.")
    ArgP.add_argument("layer_dir", help="The directory to import e.g. axl_translator_output_dir/levelX")
    ArgP.add_argument("srs", help="Spatial Reference System used by this layer.")
    Args = ArgP.parse_args()

    layer_directory = layer_importer.LayerDirectory(Args.layer_dir)

    db = dbapi2.connect(database=Args.db_name, user=Args.db_user, password=Args.db_password)
    cur = db.cursor()

    # CREATE VIEW vista AS SELECT text 'Hello World' AS hello;
    db.set_isolation_level(0)
    namespaced_layer_name = Args.workspace + "_view_" + layer_directory.layer_name
    q = "CREATE VIEW {0} AS ".format(namespaced_layer_name) + layer_directory.sql()
    print q
    cur.execute(q)

    api = layer_importer.GeoserverApi(Args.api_url, Args.api_user, Args.api_password)
    # "taesp_ahrc_2007", "postgis_viewer_taesp"
    api.create_postgis_featuretype(Args.workspace, Args.datastore, layer_directory.layer_name, namespaced_layer_name, Args.srs)
    api.create_style(Args.workspace, layer_directory.layer_name, layer_directory.sld())
    api.set_layer_style(Args.workspace, layer_directory.layer_name, layer_directory.layer_name)
